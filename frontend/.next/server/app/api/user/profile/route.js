"use strict";(()=>{var e={};e.id=744,e.ids=[744],e.modules={11185:e=>{e.exports=require("mongoose")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},86624:e=>{e.exports=require("querystring")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},50838:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>S,patchFetch:()=>h,requestAsyncStorage:()=>f,routeModule:()=>g,serverHooks:()=>x,staticGenerationAsyncStorage:()=>y});var s={};r.r(s),r.d(s,{GET:()=>m,PUT:()=>c});var a=r(73278),n=r(45002),i=r(54877),o=r(71309),u=r(18445),d=r(70317),p=r(23537),l=r(73275);async function c(e){try{let t=await (0,u.getServerSession)(l.L);if(!t?.user?.id)return o.NextResponse.json({message:"You must be logged in to update your profile"},{status:401});let r=await e.json();if(!r.name?.trim())return o.NextResponse.json({message:"Name is required"},{status:400});await (0,d.q)();let s=await p.Z.findById(t.user.id);if(!s)return o.NextResponse.json({message:"User not found"},{status:404});return s.name=r.name.trim(),r.bio&&(s.bio=r.bio.trim()),r.timezone&&(s.timezone=r.timezone),await s.save(),o.NextResponse.json({message:"Profile updated successfully",user:{id:s._id.toString(),name:s.name,email:s.email,bio:s.bio,timezone:s.timezone,updatedAt:s.updatedAt}},{status:200})}catch(e){return console.error("Profile update error:",e),o.NextResponse.json({message:"Failed to update profile"},{status:500})}}async function m(){try{let e=await (0,u.getServerSession)(l.L);if(!e?.user?.id)return o.NextResponse.json({message:"Unauthorized"},{status:401});await (0,d.q)();let t=await p.Z.findById(e.user.id);if(!t)return o.NextResponse.json({message:"User not found"},{status:404});return o.NextResponse.json({user:{id:t._id.toString(),name:t.name,email:t.email,bio:t.bio,timezone:t.timezone,createdAt:t.createdAt,updatedAt:t.updatedAt}})}catch(e){return console.error("Profile fetch error:",e),o.NextResponse.json({message:"Failed to fetch profile"},{status:500})}}let g=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/user/profile/route",pathname:"/api/user/profile",filename:"route",bundlePath:"app/api/user/profile/route"},resolvedPagePath:"D:\\Shraddha\\ClgProj\\study-craft\\frontend\\src\\app\\api\\user\\profile\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:f,staticGenerationAsyncStorage:y,serverHooks:x}=g,S="/api/user/profile/route";function h(){return(0,i.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:y})}},73275:(e,t,r)=>{r.d(t,{L:()=>u});var s=r(76214),a=r(70317),n=r(23537),i=r(63506),o=r.n(i);let u={providers:[(0,s.Z)({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)return null;try{await (0,a.q)();let t=await n.Z.findOne({email:e.email});if(!t||!await o().compare(e.password,t.password))return null;return{id:t._id.toString(),name:t.name,email:t.email}}catch(e){return console.error("Error during authentication:",e),null}}})],callbacks:{jwt:async({token:e,user:t})=>(t&&(e.id=t.id),e),session:async({session:e,token:t})=>(e.user&&(e.user.id=t.id),e)},pages:{signIn:"/signin"},session:{strategy:"jwt",maxAge:2592e3},secret:process.env.NEXTAUTH_SECRET}},70317:(e,t,r)=>{r.d(t,{q:()=>n});var s=r(11185),a=r.n(s);let n=async()=>{try{await a().connect(process.env.MONGODB_URI),console.log("Connected to MongoDB")}catch(e){console.log("Error connecting to MongoDB: ",e)}}},23537:(e,t,r)=>{r.d(t,{Z:()=>u});var s=r(11185),a=r.n(s);let n=new(a()).Schema({title:{type:String,required:!0},description:String,type:String,link:String,addedAt:{type:Date,default:Date.now}}),i=new(a()).Schema({subject:{type:String,required:!0},duration:String,examDate:Date,weeklyPlans:[{week:String,goals:[String],dailyTasks:[{day:String,tasks:[String],duration:String}]}],recommendations:[String],createdAt:{type:Date,default:Date.now}}),o=new(a()).Schema({name:{type:String,required:!0},email:{type:String,required:!0,unique:!0},password:{type:String,required:!0},subjects:[{type:String,trim:!0}],savedPlans:[i],savedResources:[n],profile:{preferences:{emailNotifications:{type:Boolean,default:!0},studyReminders:{type:Boolean,default:!0}}},stats:{type:a().Schema.Types.ObjectId,ref:"StudyStats"}},{timestamps:!0});o.index({subjects:1}),o.methods.addStudyPlan=function(e){return this.savedPlans.push(e),this.save()},o.methods.addResource=function(e){return this.savedResources.push(e),this.save()};let u=a().models.User||a().model("User",o)}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[379,461,121,309],()=>r(50838));module.exports=s})();